# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: maven-ci-cd

    services: 
      mysql:
        image: mysql:5.7
        ports: 
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env: 
        APP_JWTSECRET: ${{ secrets.APP_JWTSECRET }}
        APP_SECURITY_SALT: ${{ secrets.APP_SECURITY_SALT }}
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        APP_JWTEXPIRATIONMS: ${{ vars.APP_JWTEXPIRATIONMS }}
        APP_SECURITY_ALGORITHM: ${{ vars.APP_SECURITY_ALGORITHM }}
        APP_SECURITY_CORS_ALLOWED_ORIGIN: ${{ vars.APP_SECURITY_CORS_ALLOWED_ORIGIN }}
        SPRING_DATASOURCE_URL: ${{ vars.SPRING_DATASOURCE_URL }}
        SPRING_DATASOURCE_USERNAME: ${{ vars.SPRING_DATASOURCE_USERNAME }}
        SPRING_JPA_DATABASE_PLATFORM: ${{ vars.SPRING_JPA_DATABASE_PLATFORM }}
        SPRING_JPA_HIBERNATE_DDL_AUTO: ${{ vars.SPRING_JPA_HIBERNATE_DDL_AUTO }}      
 
    # TODO complete Elastic Beanstalk Deployment
    # - name: Install Python 3.11
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: 3.11
    # - name: Install EB CLI using pip
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install awsebcli
    # - name: Init EB CLI
    #   run: eb init
    # - name: Deploy to EC2
    #   env: 
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_DEFAULT_REGION: ca-central-1
    #   run: eb deploy
